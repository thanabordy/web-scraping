from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from io import StringIO
import pandas as pd
import time

# ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏∏‡πâ‡∏ô
stock_list = [
    "24CS", "ARIN", "ARROW", "BC", "BKA", "BLESS", "BSM", "BTW", "CAZ", "CHEWA", "CPANEL", "CRD", "DHOUSE",
    "DIMET", "DPAINT", "FLOYD", "HYDRO", "IND", "JAK", "K", "META", "PANEL", "PPS", "PRI", "PROS", "PSG",
    "QTCG", "SENX", "SK", "SMART", "STC", "STX", "SVR", "TAPAC", "THANA", "TIGER", "TITLE", "WELL", "YONG"
]

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Chrome ‡πÄ‡∏õ‡πá‡∏ô headless
chrome_options = Options()
chrome_options.add_argument("--headless")
chrome_options.add_argument("--disable-gpu")

# ‡πÄ‡∏õ‡∏¥‡∏î‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå
driver = webdriver.Chrome(options=chrome_options)

# ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
all_data = {}

for symbol in stock_list:
    try:
        print(f"üì• ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•: {symbol}")
        url = f'https://www.set.or.th/th/market/product/stock/quote/{symbol}/financial-statement/company-highlights'
        driver.get(url)

        wait = WebDriverWait(driver, 20)
        time.sleep(2)  # ‡∏£‡∏≠‡πÉ‡∏´‡πâ JS ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå

        html = driver.page_source
        tables = pd.read_html(StringIO(html))

        # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏∏‡πâ‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô (‡∏´‡∏£‡∏∑‡∏≠‡∏à‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Å‡πá‡πÑ‡∏î‡πâ)
        if tables:
            all_data[symbol] = tables[0]
        else:
            print(f"‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö {symbol}")

    except Exception as e:
        print(f"‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏Å‡∏±‡∏ö {symbol}: {e}")

driver.quit()

# ---------------------------------------------
# ‚ùå ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡∏¥‡∏°: ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏•‡∏≤‡∏¢ Sheet
# with pd.ExcelWriter("set_financial_highlights_all.xlsx") as writer:
#     for symbol, df in all_data.items():
#         df.to_excel(writer, sheet_name=symbol[:31], index=False)  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ä‡∏∑‡πà‡∏≠ sheet ‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 31 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
# print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Excel ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: set_financial_highlights_all.xlsx")
# ---------------------------------------------

# ‚úÖ ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÉ‡∏´‡∏°‡πà: ‡∏£‡∏ß‡∏°‡∏ó‡∏∏‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Sheet ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏´‡∏∏‡πâ‡∏ô
with pd.ExcelWriter("set_financial_highlights_all_single_sheet.xlsx") as writer:
    combined_data = pd.DataFrame()

    for symbol, df in all_data.items():
        # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏±‡∏ß‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡∏≠‡∏á‡∏´‡∏∏‡πâ‡∏ô‡∏≠‡∏∞‡πÑ‡∏£
        header_row = pd.DataFrame([[f"‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏´‡∏∏‡πâ‡∏ô {symbol}"] + [""] * (df.shape[1] - 1)], columns=df.columns)

        # ‡∏£‡∏ß‡∏°‡∏´‡∏±‡∏ß + ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        df_with_header = pd.concat([header_row, df], ignore_index=True)

        # ‡πÄ‡∏ß‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ß‡πà‡∏≤‡∏á‡∏ó‡πâ‡∏≤‡∏¢‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        empty_row = pd.DataFrame([[""] * df.shape[1]], columns=df.columns)

        # ‡∏£‡∏ß‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å
        combined_data = pd.concat([combined_data, df_with_header, empty_row], ignore_index=True)

    # ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡∏•‡∏á Excel Sheet ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    combined_data.to_excel(writer, sheet_name="AllStocks", index=False)

print("‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å Excel ‡πÅ‡∏ö‡∏ö‡∏£‡∏ß‡∏° Sheet ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢: set_financial_highlights_all_single_sheet.xlsx")
